---
all:
  vars:
    ansible_connection: ssh
    ansible_user: vagrant
    ansible_become: true
    ansible_ssh_private_key_file: ~/.ssh/id_rsa
    health_checks_enabled: true
    redhat_java_package_name: java-1.8.0-openjdk

zookeeper:
  hosts:
    192.168.57.70:
    192.168.57.71:
    192.168.57.72:

kafka_broker:
  vars:
    kafka_broker_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xms1g -Xmx1g -XX:MetaspaceSize=96m -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80"
  ##  To configure LDAP for RBAC enablement, you will need to provide the appropiate properties to connect to your LDAP server
  ##  using the ldap_config varible under the vars block.  The following is an example:
  #
  #   ldap_config: |
  #     ldap.java.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory
  #     ldap.com.sun.jndi.ldap.read.timeout=3000
  #     ldap.java.naming.provider.url=ldap://ldap1:389
  #     ldap.java.naming.security.principal=uid=mds,OU=rbac,DC=example,DC=com
  #     ldap.java.naming.security.credentials=password
  #     ldap.java.naming.security.authentication=simple
  #     ldap.user.search.base=OU=rbac,DC=example,DC=com
  #     ldap.group.search.base=OU=rbac,DC=example,DC=com
  #     ldap.user.name.attribute=uid
  #     ldap.user.memberof.attribute.pattern=CN=(.*),OU=rbac,DC=example,DC=com
  #     ldap.group.name.attribute=cn
  #     ldap.group.member.attribute.pattern=CN=(.*),OU=rbac,DC=example,DC=com
  #     ldap.user.object.class=account
  ##
  hosts:
    192.168.57.70:
    192.168.57.71:
    192.168.57.72:

control_center:
  hosts:
    192.168.57.73:

ksql:
  hosts:
    192.168.57.73: